#!/usr/bin/env pwsh

# Stop on every error
$script:ErrorActionPreference = 'Stop'

# For an overview of all available styles, see:
# * https://xyproto.github.io/splash/docs/all.html (short snippets)
# * https://xyproto.github.io/splash/docs/longer/all.html (longer snippets)
$THEME = 'vulcan'

#
# Adopt these colors from the selected theme:
#

# From .bg/.chroma
$TEXT_COLOR = '#c9c9c9'
# From .bg/.chroma
$BACKGROUND_COLOR = '#282c34'
# From .ln
$LINE_NUMBER_COLOR = '#7f7f7f'

# Replace colors with different colors. Especially comment colors are often barely readable - especially with line highlights.
# NOTE: Use "@(," to force creating a list (otherwise PowerShell will "unpack" the outer list if it has only one element).
$REPLACE_COLORS = @(
    # Replace comment color with comment color from pygments lightbulb style.
    @(' color: #3e4460', ' color: #7e8aa1'),
    # Replace shell output colors
    @(' color: #43454f', ' color: #7e8aa1')
)

####################################################################################

$output = & hugo gen chromastyles --style $THEME
if (-Not $?) {
    Write-Host $output
    Write-Error 'hugo gen failed'
}

$cssRules = $output -join "`n" | Out-String

foreach ($replaceTuple in $REPLACE_COLORS) {
    Write-Host "Replacing '$($replaceTuple[0])' with '$($replaceTuple[1])'."
    $cssRules = $cssRules.Replace($replaceTuple[0], $replaceTuple[1])
}

$cssFileContents = @"
//
// This file has been generated by "$($MyInvocation.MyCommand.Name)".
//
// DO NOT MODIFY MANUALLY!!!
//
// Theme: $THEME
//

`$code-block-background-color: $BACKGROUND_COLOR;
`$code-block-text-color: $TEXT_COLOR;
`$code-block-line-number-color: $LINE_NUMBER_COLOR;

$cssRules
"@

$cssFileContents.TrimStart().Replace("`r", '') | Out-File "$PSScriptRoot/css/components/_code_block_highlighting.scss" -Encoding utf8 -NoNewline
