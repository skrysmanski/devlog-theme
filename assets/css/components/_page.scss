main.page {
  display: grid;

  // Defines the columns.
  // NOTE: minmax() is required to prevent the column to become too big. See: https://css-tricks.com/preventing-a-grid-blowout/
  //   I.e. if just using max($content-width), the column doesn't shrink if the available space is smaller.
  grid-template-columns: minmax(0, $content-width);
  @media (min-width: $toc_as_sidebar_width_threshold) { // screen is big enough
    grid-template-columns: minmax(0, $content-width) $toc-sidebar-width;
  }

  // This allows the TOC to be sticky.
  align-items: start;
}

// Used to size the margin/padding between content and footer dynamically (see "dynamic-end-of-page-margin.module.ts").
#dynamic-end-of-page {
  // NOTE: This prevents the dynamic "end-of-page" gap to become too small. (Works especially if "height" is set to 0.)
  min-height: 3em;

  &.hidden {
    display: none;
  }
}

main.page > header {
  grid-row: 1;
  grid-column: 1;

  #page-title {
    // NOTE: We replace "margin-top" with "padding-top" here so that "scroll-margin-top" doesn't create
    //   a difference between scrolling to this heading and scrolling to the top of the page.
    margin-top: 0;
    padding-top: 0.7em;

    margin-bottom: 0.5em;

    line-height: 1.3em;
  }

  .old-page-note {
    margin-top: 1.5em;
    background-color: #fff4a5;
    padding: $page-meta-padding;
    border-radius: $block-border-radius;
  }
}

main.page > article {
  grid-column: 1;
  grid-row: 3;

  @media (min-width: $toc_as_sidebar_width_threshold) { // screen is big enough
    grid-row: 2;
  }
}

//
// Page Content
//
#page-content {
  //
  // Headings and sections
  //
  h2, h3, h4, h5, h6 {
    border-top: 1px solid #dfdfdf;
    margin-top: 2em;
    padding-top: 0.7em;

    // This is for the ":target" selector that changes the padding.
    transition: padding 0.35s;

    // NOTE: We make this always visible (we used to hide it and show only on hover) because
    //   this way it's easier to discover and it's also usable on mobile devices (where there
    //   is no hover).
    a.permalink {
      font-size: 0.7em;
      text-decoration: none;
    }

    // Make permalink appear only on hover - but only if the device supports hover (i.e. make it
    // permanently visible on mobile devices).
    @media (hover: hover) {
      a.permalink {
        opacity: 0;
        transition: opacity 0.35s;
      }
      &:hover a.permalink {
        opacity: 1;
      }
    }
  }

  // Makes sure that there are no (vertical) gaps (via margins) between sections. If there are,
  // the IntersectionObserver won't know which section that margin belongs to (i.e. if you
  // scroll "wrong", no section in the ToC will be highlighted). To fix this, we remove all
  // margins and replace them with paddings.
  // NOTE: sections are only available if JavaScript is enabled.
  section {
    box-sizing: border-box;
    padding-top: 2em;

    & > h2, & > h3, & > h4, & > h5, & > h6 {
      // NOTE: We move the margin from the h element to the outer section, so that "scroll-margin-top"
      //   works properly (i.e. creates a 2em gap between the header and the heading).
      margin-top: 0;
    }

    p:last-child {
      margin-bottom: 0;
    }
  }

  // Remove top border if there's no text/content between the primary title and the first h2 heading.
  // NOTE: Don't remove the top margin/padding so that "scroll-margin-top" works properly (i.e. still
  //   creates a 2em gap between the header and the heading).
  > h2:first-child, > section:first-child > h2 {
    border-top: none;
  }

  // If the heading/section is targeted via "#...".
  section:target:not(.target-cleared) {
    > h2, > h3, > h4, > h5, > h6 { // after sections have been created
      border-top: none;
      padding: 0.2em 0.6em;
      background-color: $heading-background-target;
      border-radius: $block-border-radius;
    }
  }
  h2, h3, h4, h5, h6 { // before sections are created
    &:target:not(.target-cleared) {
      border-top: none;
      padding: 0.2em 0.6em;
      background-color: $heading-background-target;
      border-radius: $block-border-radius;
    }
  }


  //
  // Other elements
  //
  blockquote {
    border-left: 6px solid #bbb;
    margin: 1em 0em;
    padding: .5em 1em;
    background: #eaeaea;

    p {
      margin: .5em 0;
    }
  }

  a.resource:before {
    @extend %fa-icon;
    @extend .fa-solid;
    content: fa-content($fa-var-paperclip);

    margin-right: 0.3em;
    font-size: 80%;
  }

  //
  // Code blocks
  //
  @import 'components/_code_block';


  //
  // Images
  //
  // Inline images
  .figure {
    .figcaption {
      // Hide for inline images.
      display: none;
    }
  }
  // Block images
  .figure.standalone {
    display: flex;
    flex-direction: column;
    align-items: center;

    & > img {
      max-width: 100%;
    }
    .figcaption {
      display: block;
      margin-top: 0.7em;
      max-width: 80%; // make the caption a little bit smaller than the full page width
      text-align: center; // only relevant if the text spans multiple lines

      color: lighten($text-color, 15%);
    }
  }

  //
  // Regular tables
  // NOTE: We restrict the selector like this so that this style doesn't mess with tables used in
  //  other elements (e.g. code blocks with line numbers).
  //
  & > table, section > table {
    font-size: 90%;

    border-spacing: 0;

    margin: 2em auto 3em;

    thead {
      th {
        padding: 0 0.8em;
        text-align: left;
        font-family: $heading-font;
        border-bottom: 1px solid $text-color;
      }
    }

    tbody {
      td {
        padding: 0.4em 0.8em;
        border-bottom: 1px solid #ddd;
      }

      tr:last-child > td {
        border-bottom: 1px solid $text-color;
      }
    }
  }
}


//
// Numbered headings
//
main.page-main-section #page-content {
  @include heading-numbers {
    color: $heading-number-color;
    font-size: 0.5em;
    font-weight: normal;
  }
}
